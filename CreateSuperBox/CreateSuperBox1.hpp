//==============================================================================
//  WARNING!!  This file is overwritten by the Block Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  C:\Users\ycchen10\OneDrive - kochind.com\Desktop\NX8.5Dev\UI\CreateSuperBox.hpp
//
//        This file was generated by the NX Block Styler
//        Created by: ycchen10
//              Version: NX 11
//              Date: 10-18-2018  (Format: mm-dd-yyyy)
//              Time: 12:10
//
//==============================================================================

#ifndef CREATESUPERBOX_H_INCLUDED
#define CREATESUPERBOX_H_INCLUDED

//------------------------------------------------------------------------------
//These includes are needed for the following template code
//------------------------------------------------------------------------------
#include <uf_defs.h>
#include <uf_ui_types.h>
#include <iostream>
#include <NXOpen/Session.hxx>
#include <NXOpen/UI.hxx>
#include <NXOpen/NXMessageBox.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXException.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_BlockDialog.hxx>
#include <NXOpen/BlockStyler_PropertyList.hxx>
#include <NXOpen/BlockStyler_Group.hxx>
#include <NXOpen/BlockStyler_Enumeration.hxx>
#include <NXOpen/BlockStyler_SelectObject.hxx>
#include <NXOpen/BlockStyler_SpecifyOrientation.hxx>
#include <NXOpen/BlockStyler_Toggle.hxx>
#include <NXOpen/BlockStyler_LinearDimension.hxx>
#include <NXOpen/BlockStyler_IntegerBlock.hxx>
#include <NXOpen/BlockStyler_ObjectColorPicker.hxx>
#include <NXOpen/BlockStyler_Button.hxx>
#include <NXOpen/BlockStyler_Label.hxx>


#include "CcreateBox.hpp"
#include <NXOpen/NXopen_h.hxx>
#include <uf.h>
//------------------------------------------------------------------------------
// Namespaces needed for following template
//------------------------------------------------------------------------------
using namespace std;
using namespace NXOpen;
using namespace NXOpen::BlockStyler;

class DllExport CreateSuperBox
{
    // class members
public:
    static Session *theSession;
    static UI *theUI;
    CreateSuperBox();
    ~CreateSuperBox();
    int Show();
    
    //----------------------- BlockStyler Callback Prototypes ---------------------
    // The following member function prototypes define the callbacks 
    // specified in your BlockStyler dialog.  The empty implementation
    // of these prototypes is provided in the CreateSuperBox.cpp file. 
    // You are REQUIRED to write the implementation for these functions.
    //------------------------------------------------------------------------------
    void initialize_cb();
    void dialogShown_cb();
    int apply_cb();
    int ok_cb();
    int update_cb(NXOpen::BlockStyler::UIBlock* block);
	int filter_cb(NXOpen::BlockStyler::UIBlock*  block, TaggedObject * m_objects);

    void focusNotify_cb(NXOpen::BlockStyler::UIBlock* block, bool focus);
    PropertyList* GetBlockProperties(const char *blockID);
    
private:
    const char* theDlxFileName;
    NXOpen::BlockStyler::BlockDialog* theDialog;
    NXOpen::BlockStyler::Group* group0;// Block type: Group
    NXOpen::BlockStyler::Enumeration* en_type;// Block type: Enumeration
    NXOpen::BlockStyler::Group* group;// Block type: Group
    NXOpen::BlockStyler::Enumeration* m_seleType_enum;// Block type: Enumeration
    NXOpen::BlockStyler::SelectObject* m_sele;// Block type: Selection
    NXOpen::BlockStyler::SpecifyOrientation* m_manip;// Block type: Specify Orientation
    NXOpen::BlockStyler::Group* group1;// Block type: Group
    NXOpen::BlockStyler::Toggle* m_offset_bool;// Block type: Toggle
    NXOpen::BlockStyler::LinearDimension* m_offset_dim;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_PositiveX;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_NegativeX;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_PositiveY;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_NegativeY;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_PositiveZ;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_NegativeZ;// Block type: Linear Dim
    NXOpen::BlockStyler::LinearDimension* m_Radial;// Block type: Linear Dim
    NXOpen::BlockStyler::Group* group2;// Block type: Group
    NXOpen::BlockStyler::Toggle* m_hile_bool;// Block type: Toggle
    NXOpen::BlockStyler::Toggle* m_unite_bool;// Block type: Toggle
    NXOpen::BlockStyler::Toggle* m_plane_bool;// Block type: Toggle
    NXOpen::BlockStyler::Toggle* m_surface_bool;// Block type: Toggle
    NXOpen::BlockStyler::Group* group3;// Block type: Group
    NXOpen::BlockStyler::IntegerBlock* m_translucency_int;// Block type: Integer
    NXOpen::BlockStyler::IntegerBlock* m_layer_int;// Block type: Integer
    NXOpen::BlockStyler::ObjectColorPicker* m_color_int;// Block type: Color Picker
    NXOpen::BlockStyler::Group* group4;// Block type: Group
    NXOpen::BlockStyler::Button* button0;// Block type: Button
    NXOpen::BlockStyler::Label* m_preview_str;// Block type: Label


	std::vector < NXOpen::TaggedObject *> m_objects; //选中
	int m_seletype;  //选择类型
	bool m_offsetbool;  //单个偏置

	double m_offset;  //偏置

	double m_positiveX; //x+
	double m_negativeX; //X-
	double m_positiveY; //Y+
	double m_negativeY; //Y-
	double m_positiveZ; //Z+
	double m_negativeZ; //Z-

	int m_translucency; //透明度
	int m_layer;        //层
	int m_color;        //颜色
	Point3d m_csysorigin;
	double *m_boxcsys;
	CcreateBox *m_box;

	std::vector< NXOpen::Body * > bodies;
    
};
#endif //CREATESUPERBOX_H_INCLUDED
